using System;
 
public class Solution
{
    public int[,] solution(int n)
    {
        int dir = 0; // 0 right, 1 down, 2 left, 3 up
        int dirX = 0, dirZ = 0;
        int[,] r = new int[n, n];
        
        for (int i = 1; i <= n * n; i++)
        {
            r[dirX, dirZ] = i;
        
            if (dir == 0)
            {
                dirZ++;
        
                if (dirZ == n)
                {
                    dirZ--;
                    dirX++;
                    dir++;
                }
                else if (r[dirX, dirZ] != 0)
                {
                    dirZ--;
                    dirX++;
                    dir++;
                }
            }
            else if(dir == 1)
            {
                dirX++;
        
                if (dirX == n)
                {
                    dirX--;
                    dirZ--;
                    dir++;
                }
                else if (r[dirX, dirZ] != 0)
                {
                    dirX--;
                    dirZ--;
                    dir++;
                }
            }
            else if (dir == 2)
            {
                dirZ--;
        
                if (dirZ == -1)
                {
                    dirZ++;
                    dirX--;
                    dir++;
                }
                else if (r[dirX, dirZ] != 0)
                {
                    dirZ++;
                    dirX--;
                    dir++;
                }
            }
            else if (dir == 3)
            {
                dirX--;
        
                if (dirX == -1)
                {
                    dirX++;
                    dirZ++;
                    dir++;
                }
                else if (r[dirX, dirZ] != 0)
                {
                    dirX++;
                    dirZ++;
                    dir++;
                }
            }
        
            if (dir > 3)
            {
                dir = 0;
            }
        }
        
        return r;
    }
}
